# coding: utf-8

"""
    Pieces Isomorphic OpenAPI

    Endpoints for Assets, Formats, Users, Asset, Format, User.

    The version of the OpenAPI document: 1.0
    Contact: tsavo@pieces.app
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.auth0_user import Auth0User  # noqa: E501

class TestAuth0User(unittest.TestCase):
    """Auth0User unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Auth0User:
        """Test Auth0User
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Auth0User`
        """
        model = Auth0User()  # noqa: E501
        if include_optional:
            return Auth0User(
                name = 'Tsavo Knott',
                picture = 'https://picsum.photos/200',
                email = 'user@pieces.app',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                email_verified = True,
                family_name = '',
                given_name = '',
                identities = [
                    openapi_client.models.auth0_identity.Auth0Identity(
                        connection = '', 
                        is_social = True, 
                        provider = '', 
                        user_id = '', 
                        access_token = '', 
                        expires_in = 56, )
                    ],
                nickname = '',
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                username = '',
                user_metadata = openapi_client.models.auth0_user_metadata.Auth0UserMetadata(
                    schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                        migration = 56, 
                        semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                    global_id = '', 
                    cloud_key = '', 
                    stripe_customer_id = '', 
                    vanityname = '', 
                    allocation = openapi_client.models.auth0_user_allocation_metadata.Auth0UserAllocationMetadata(
                        project = '', 
                        region = '', ), ),
                locale = '',
                user_id = '',
                last_ip = '',
                last_login = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                logins_count = 56,
                blocked_for = [
                    ''
                    ],
                guardian_authenticators = [
                    ''
                    ]
            )
        else:
            return Auth0User(
        )
        """

    def testAuth0User(self):
        """Test Auth0User"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
