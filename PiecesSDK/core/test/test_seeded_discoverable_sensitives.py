# coding: utf-8

"""
    Pieces Isomorphic OpenAPI

    Endpoints for Assets, Formats, Users, Asset, Format, User.

    The version of the OpenAPI document: 1.0
    Contact: tsavo@pieces.app
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.seeded_discoverable_sensitives import SeededDiscoverableSensitives  # noqa: E501

class TestSeededDiscoverableSensitives(unittest.TestCase):
    """SeededDiscoverableSensitives unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SeededDiscoverableSensitives:
        """Test SeededDiscoverableSensitives
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SeededDiscoverableSensitives`
        """
        model = SeededDiscoverableSensitives()  # noqa: E501
        if include_optional:
            return SeededDiscoverableSensitives(
                var_schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                    migration = 56, 
                    semantic = 'MAJOR_0_MINOR_0_PATCH_1', ),
                iterable = [
                    openapi_client.models.seeded_discoverable_sensitive.SeededDiscoverableSensitive(
                        schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                            migration = 56, 
                            semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                        asset = '', 
                        text = '', 
                        mechanism = 'MANUAL', 
                        category = 'SECRET', 
                        severity = 'LOW', 
                        name = '', 
                        description = '', 
                        metadata = openapi_client.models.sensitive_metadata.SensitiveMetadata(
                            match = openapi_client.models.text_match.TextMatch(
                                group = openapi_client.models.text_location.TextLocation(
                                    text = '', 
                                    start = 56, 
                                    end = 56, ), 
                                subgroup = openapi_client.models.text_location.TextLocation(
                                    text = '', 
                                    start = 56, 
                                    end = 56, ), ), 
                            entropy = 1.337, ), )
                    ],
                application = ''
            )
        else:
            return SeededDiscoverableSensitives(
                iterable = [
                    openapi_client.models.seeded_discoverable_sensitive.SeededDiscoverableSensitive(
                        schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                            migration = 56, 
                            semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                        asset = '', 
                        text = '', 
                        mechanism = 'MANUAL', 
                        category = 'SECRET', 
                        severity = 'LOW', 
                        name = '', 
                        description = '', 
                        metadata = openapi_client.models.sensitive_metadata.SensitiveMetadata(
                            match = openapi_client.models.text_match.TextMatch(
                                group = openapi_client.models.text_location.TextLocation(
                                    text = '', 
                                    start = 56, 
                                    end = 56, ), 
                                subgroup = openapi_client.models.text_location.TextLocation(
                                    text = '', 
                                    start = 56, 
                                    end = 56, ), ), 
                            entropy = 1.337, ), )
                    ],
                application = '',
        )
        """

    def testSeededDiscoverableSensitives(self):
        """Test SeededDiscoverableSensitives"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
