# coding: utf-8

"""
    Pieces Isomorphic OpenAPI

    Endpoints for Assets, Formats, Users, Asset, Format, User.

    The version of the OpenAPI document: 1.0
    Contact: tsavo@pieces.app
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.exported_database import ExportedDatabase  # noqa: E501

class TestExportedDatabase(unittest.TestCase):
    """ExportedDatabase unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExportedDatabase:
        """Test ExportedDatabase
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExportedDatabase`
        """
        model = ExportedDatabase()  # noqa: E501
        if include_optional:
            return ExportedDatabase(
                analyses = [
                    56
                    ],
                applications = [
                    56
                    ],
                assets = [
                    56
                    ],
                code_analyses = [
                    56
                    ],
                files = [
                    56
                    ],
                format_metrics = [
                    56
                    ],
                formats = [
                    56
                    ],
                fragments = [
                    56
                    ],
                image_analyses = [
                    56
                    ],
                models = [
                    56
                    ],
                ocr_analyses = [
                    56
                    ],
                persons = [
                    56
                    ],
                sensitives = [
                    56
                    ],
                tags = [
                    56
                    ],
                websites = [
                    56
                    ],
                values = openapi_client.models.exported_database_formats.ExportedDatabaseFormats(
                    schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                        migration = 56, 
                        semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                    iterable = [
                        openapi_client.models.exported_database_format.ExportedDatabaseFormat(
                            id = '', 
                            raw = [
                                56
                                ], )
                        ], ),
                version = '',
                var_schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                    migration = 56, 
                    semantic = 'MAJOR_0_MINOR_0_PATCH_1', ),
                relationships = [
                    56
                    ],
                activities = [
                    56
                    ],
                annotations = [
                    56
                    ],
                hints = [
                    56
                    ],
                anchors = [
                    56
                    ],
                anchor_points = [
                    56
                    ],
                conversations = [
                    56
                    ],
                conversation_messages = [
                    56
                    ],
                message_values = openapi_client.models.exported_database_formats.ExportedDatabaseFormats(
                    schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                        migration = 56, 
                        semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                    iterable = [
                        openapi_client.models.exported_database_format.ExportedDatabaseFormat(
                            id = '', 
                            raw = [
                                56
                                ], )
                        ], )
            )
        else:
            return ExportedDatabase(
                analyses = [
                    56
                    ],
                applications = [
                    56
                    ],
                assets = [
                    56
                    ],
                code_analyses = [
                    56
                    ],
                files = [
                    56
                    ],
                format_metrics = [
                    56
                    ],
                formats = [
                    56
                    ],
                fragments = [
                    56
                    ],
                image_analyses = [
                    56
                    ],
                models = [
                    56
                    ],
                ocr_analyses = [
                    56
                    ],
                persons = [
                    56
                    ],
                sensitives = [
                    56
                    ],
                tags = [
                    56
                    ],
                websites = [
                    56
                    ],
                values = openapi_client.models.exported_database_formats.ExportedDatabaseFormats(
                    schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                        migration = 56, 
                        semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                    iterable = [
                        openapi_client.models.exported_database_format.ExportedDatabaseFormat(
                            id = '', 
                            raw = [
                                56
                                ], )
                        ], ),
                version = '',
        )
        """

    def testExportedDatabase(self):
        """Test ExportedDatabase"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
