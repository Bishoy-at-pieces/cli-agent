# coding: utf-8

"""
    Pieces Isomorphic OpenAPI

    Endpoints for Assets, Formats, Users, Asset, Format, User.

    The version of the OpenAPI document: 1.0
    Contact: tsavo@pieces.app
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.tracked_format_event_metadata import TrackedFormatEventMetadata  # noqa: E501

class TestTrackedFormatEventMetadata(unittest.TestCase):
    """TrackedFormatEventMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TrackedFormatEventMetadata:
        """Test TrackedFormatEventMetadata
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TrackedFormatEventMetadata`
        """
        model = TrackedFormatEventMetadata()  # noqa: E501
        if include_optional:
            return TrackedFormatEventMetadata(
                reclassification = openapi_client.models.tracked_asset_event_format_reclassification_metadata.TrackedAssetEventFormatReclassificationMetadata(
                    schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                        migration = 56, 
                        semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                    previous = openapi_client.models.classification.Classification(
                        generic = 'CODE', 
                        specific = 'csx', 
                        rendering = 'HTML', ), 
                    current = openapi_client.models.classification.Classification(
                        generic = 'CODE', 
                        specific = 'csx', ), )
            )
        else:
            return TrackedFormatEventMetadata(
        )
        """

    def testTrackedFormatEventMetadata(self):
        """Test TrackedFormatEventMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
