# coding: utf-8

"""
    Pieces Isomorphic OpenAPI

    Endpoints for Assets, Formats, Users, Asset, Format, User.

    The version of the OpenAPI document: 1.0
    Contact: tsavo@pieces.app
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.tracked_asset_event_identifier_description_pairs import TrackedAssetEventIdentifierDescriptionPairs  # noqa: E501

class TestTrackedAssetEventIdentifierDescriptionPairs(unittest.TestCase):
    """TrackedAssetEventIdentifierDescriptionPairs unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TrackedAssetEventIdentifierDescriptionPairs:
        """Test TrackedAssetEventIdentifierDescriptionPairs
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TrackedAssetEventIdentifierDescriptionPairs`
        """
        model = TrackedAssetEventIdentifierDescriptionPairs()  # noqa: E501
        if include_optional:
            return TrackedAssetEventIdentifierDescriptionPairs(
                var_schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                    migration = 56, 
                    semantic = 'MAJOR_0_MINOR_0_PATCH_1', ),
                asset_created = 'an_asset_was_created',
                asset_viewed = 'an_asset_was_viewed',
                asset_format_copied = 'an_asset_preview_format_was_copied',
                asset_format_downloaded = 'an_asset_format_was_downloaded',
                asset_deleted = 'an_asset_was_deleted',
                asset_description_updated = 'an_asset_was_redescribed_by_the_user',
                asset_name_updated = 'an_asset_was_renamed_by_the_user',
                asset_format_generic_classification_updated = 'a_generic_classification_was_changed_on_a_format_within_an_asset',
                asset_format_specific_classification_updated = 'a_specific_classification_was_changed_on_a_format_within_an_asset',
                asset_creation_failed = 'an_asset_failed_to_be_created',
                asset_tag_added = 'a_tag_was_added_by_the_user',
                asset_link_added = 'a_link_was_added_by_the_user',
                asset_link_generated = 'an_asset_link_was_generated',
                asset_link_deleted = 'a_link_was_deleted_by_the_user',
                asset_tag_deleted = 'a_tag_was_deleted_by_the_user',
                asset_updated = 'an_asset_was_updated',
                asset_format_value_edited = 'a_specific_format_value_was_edited_on_an_asset',
                asset_format_updated = 'a_specific_format_was_updated_on_an_asset',
                asset_link_revoked = 'an_asset_link_was_revoked',
                asset_person_added = 'a_person_was_added_by_the_user',
                asset_person_deleted = 'a_person_was_deleted_by_the_user',
                asset_sensitive_added = 'a_sensitive_was_added_by_the_user',
                asset_sensitive_deleted = 'a_sensitive_was_deleted_by_the_user',
                suggested_asset_referenced = 'a_suggested_asset_was_referenced_by_the_user',
                searched_asset_referenced = 'a_searched_asset_was_referenced_by_the_user',
                asset_referenced = 'an_asset_was_referenced_by_the_user',
                activity_asset_referenced = 'an_activity_asset_was_referenced_by_the_user',
                asset_annotation_added = 'an_annotation_was_added_by_the_user',
                asset_annotation_deleted = 'an_annotation_was_deleted_by_the_user',
                asset_annotation_updated = 'an_annotation_was_updated_by_the_user',
                asset_hint_added = 'a_hint_was_added_by_the_user',
                asset_hint_deleted = 'a_hint_was_deleted_by_the_user',
                asset_hint_updated = 'a_hint_was_updated_by_the_user',
                asset_anchor_added = 'a_anchor_was_added_by_the_user',
                asset_anchor_deleted = 'a_anchor_was_deleted_by_the_user',
                asset_anchor_updated = 'a_anchor_was_updated_by_the_user'
            )
        else:
            return TrackedAssetEventIdentifierDescriptionPairs(
        )
        """

    def testTrackedAssetEventIdentifierDescriptionPairs(self):
        """Test TrackedAssetEventIdentifierDescriptionPairs"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
