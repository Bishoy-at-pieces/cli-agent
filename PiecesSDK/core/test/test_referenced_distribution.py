# coding: utf-8

"""
    Pieces Isomorphic OpenAPI

    Endpoints for Assets, Formats, Users, Asset, Format, User.

    The version of the OpenAPI document: 1.0
    Contact: tsavo@pieces.app
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.referenced_distribution import ReferencedDistribution  # noqa: E501

class TestReferencedDistribution(unittest.TestCase):
    """ReferencedDistribution unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReferencedDistribution:
        """Test ReferencedDistribution
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReferencedDistribution`
        """
        model = ReferencedDistribution()  # noqa: E501
        if include_optional:
            return ReferencedDistribution(
                var_schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                    migration = 56, 
                    semantic = 'MAJOR_0_MINOR_0_PATCH_1', ),
                id = '',
                reference = openapi_client.models.flattened_distribution.FlattenedDistribution(
                    schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                        migration = 56, 
                        semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                    id = '', 
                    share = '', 
                    created = openapi_client.models.grouped_timestamp.GroupedTimestamp(
                        value = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        readable = 'Last week - June 3rd, 3:33 a.m.', ), 
                    updated = openapi_client.models.grouped_timestamp.GroupedTimestamp(
                        value = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        readable = 'Last week - June 3rd, 3:33 a.m.', ), 
                    deleted = , 
                    mailgun = openapi_client.models.mailgun_distribution.MailgunDistribution(
                        recipients = openapi_client.models.recipients.Recipients(
                            iterable = [
                                openapi_client.models.person_basic_type.PersonBasicType(
                                    username = '', 
                                    name = '', 
                                    picture = '', 
                                    email = '', 
                                    sourced = 'TWITTER', 
                                    url = '', )
                                ], ), ), 
                    github = openapi_client.models.git_hub_distribution.GitHubDistribution(
                        gist = openapi_client.models.git_hub_gist_distribution.GitHubGistDistribution(
                            recipients = openapi_client.models.recipients.Recipients(
                                iterable = [
                                    openapi_client.models.person_basic_type.PersonBasicType(
                                        username = '', 
                                        name = '', 
                                        picture = '', 
                                        email = '', 
                                        url = '', )
                                    ], ), 
                            public = True, 
                            description = '', 
                            name = '', 
                            created = , 
                            updated = , 
                            github_id = '', 
                            url = '', ), ), )
            )
        else:
            return ReferencedDistribution(
                id = '',
        )
        """

    def testReferencedDistribution(self):
        """Test ReferencedDistribution"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
