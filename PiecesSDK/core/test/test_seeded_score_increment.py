# coding: utf-8

"""
    Pieces Isomorphic OpenAPI

    Endpoints for Assets, Formats, Users, Asset, Format, User.

    The version of the OpenAPI document: 1.0
    Contact: tsavo@pieces.app
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.seeded_score_increment import SeededScoreIncrement  # noqa: E501

class TestSeededScoreIncrement(unittest.TestCase):
    """SeededScoreIncrement unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SeededScoreIncrement:
        """Test SeededScoreIncrement
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SeededScoreIncrement`
        """
        model = SeededScoreIncrement()  # noqa: E501
        if include_optional:
            return SeededScoreIncrement(
                var_schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                    migration = 56, 
                    semantic = 'MAJOR_0_MINOR_0_PATCH_1', ),
                asset = openapi_client.models.seeded_score.SeededScore(
                    schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                        migration = 56, 
                        semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                    reuse = True, 
                    update = True, 
                    reference = True, 
                    priority = True, ),
                assets = openapi_client.models.seeded_score.SeededScore(
                    schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                        migration = 56, 
                        semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                    reuse = True, 
                    update = True, 
                    reference = True, 
                    priority = True, ),
                website = openapi_client.models.seeded_score.SeededScore(
                    schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                        migration = 56, 
                        semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                    reuse = True, 
                    update = True, 
                    reference = True, 
                    priority = True, ),
                websites = openapi_client.models.seeded_score.SeededScore(
                    schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                        migration = 56, 
                        semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                    reuse = True, 
                    update = True, 
                    reference = True, 
                    priority = True, ),
                anchor = openapi_client.models.seeded_score.SeededScore(
                    schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                        migration = 56, 
                        semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                    reuse = True, 
                    update = True, 
                    reference = True, 
                    priority = True, ),
                anchors = openapi_client.models.seeded_score.SeededScore(
                    schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                        migration = 56, 
                        semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                    reuse = True, 
                    update = True, 
                    reference = True, 
                    priority = True, ),
                anchor_point = openapi_client.models.seeded_score.SeededScore(
                    schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                        migration = 56, 
                        semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                    reuse = True, 
                    update = True, 
                    reference = True, 
                    priority = True, ),
                anchor_points = openapi_client.models.seeded_score.SeededScore(
                    schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                        migration = 56, 
                        semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                    reuse = True, 
                    update = True, 
                    reference = True, 
                    priority = True, ),
                annotation = openapi_client.models.seeded_score.SeededScore(
                    schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                        migration = 56, 
                        semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                    reuse = True, 
                    update = True, 
                    reference = True, 
                    priority = True, ),
                annotations = openapi_client.models.seeded_score.SeededScore(
                    schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                        migration = 56, 
                        semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                    reuse = True, 
                    update = True, 
                    reference = True, 
                    priority = True, ),
                conversation = openapi_client.models.seeded_score.SeededScore(
                    schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                        migration = 56, 
                        semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                    reuse = True, 
                    update = True, 
                    reference = True, 
                    priority = True, ),
                conversations = openapi_client.models.seeded_score.SeededScore(
                    schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                        migration = 56, 
                        semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                    reuse = True, 
                    update = True, 
                    reference = True, 
                    priority = True, ),
                conversation_message = openapi_client.models.seeded_score.SeededScore(
                    schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                        migration = 56, 
                        semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                    reuse = True, 
                    update = True, 
                    reference = True, 
                    priority = True, ),
                conversation_messages = openapi_client.models.seeded_score.SeededScore(
                    schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                        migration = 56, 
                        semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                    reuse = True, 
                    update = True, 
                    reference = True, 
                    priority = True, ),
                share = openapi_client.models.seeded_score.SeededScore(
                    schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                        migration = 56, 
                        semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                    reuse = True, 
                    update = True, 
                    reference = True, 
                    priority = True, ),
                shares = openapi_client.models.seeded_score.SeededScore(
                    schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                        migration = 56, 
                        semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                    reuse = True, 
                    update = True, 
                    reference = True, 
                    priority = True, ),
                sensitive = openapi_client.models.seeded_score.SeededScore(
                    schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                        migration = 56, 
                        semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                    reuse = True, 
                    update = True, 
                    reference = True, 
                    priority = True, ),
                sensitives = openapi_client.models.seeded_score.SeededScore(
                    schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                        migration = 56, 
                        semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                    reuse = True, 
                    update = True, 
                    reference = True, 
                    priority = True, ),
                hint = openapi_client.models.seeded_score.SeededScore(
                    schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                        migration = 56, 
                        semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                    reuse = True, 
                    update = True, 
                    reference = True, 
                    priority = True, ),
                hints = openapi_client.models.seeded_score.SeededScore(
                    schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                        migration = 56, 
                        semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                    reuse = True, 
                    update = True, 
                    reference = True, 
                    priority = True, ),
                person = openapi_client.models.seeded_score.SeededScore(
                    schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                        migration = 56, 
                        semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                    reuse = True, 
                    update = True, 
                    reference = True, 
                    priority = True, ),
                persons = openapi_client.models.seeded_score.SeededScore(
                    schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                        migration = 56, 
                        semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                    reuse = True, 
                    update = True, 
                    reference = True, 
                    priority = True, ),
                tag = openapi_client.models.seeded_score.SeededScore(
                    schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                        migration = 56, 
                        semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                    reuse = True, 
                    update = True, 
                    reference = True, 
                    priority = True, ),
                tags = openapi_client.models.seeded_score.SeededScore(
                    schema = openapi_client.models.embedded_model_schema.EmbeddedModelSchema(
                        migration = 56, 
                        semantic = 'MAJOR_0_MINOR_0_PATCH_1', ), 
                    reuse = True, 
                    update = True, 
                    reference = True, 
                    priority = True, )
            )
        else:
            return SeededScoreIncrement(
        )
        """

    def testSeededScoreIncrement(self):
        """Test SeededScoreIncrement"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
